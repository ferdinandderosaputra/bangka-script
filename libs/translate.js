function translateToJS(bangkaCode) {
    return bangkaCode
        .replace(/isi/g, 'let')
        .replace(/tetap/g, 'const')
        .replace(/variabel/g, 'var')
        .replace(/ulang/g, 'for')
        .replace(/sementara/g, 'while')
        .replace(/fungsi/g, 'function')
        .replace(/jika/g, 'if')
        .replace(/lain/g, 'else')
        .replace(/kembali/g, 'return')
        .replace(/tampilkan/g, 'console.log')
        .replace(/daftar/g, '[]')
        .replace(/objek/g, '{}')
        .replace(/tambah/g, '.push')
        .replace(/ambil/g, '.pop')
        .replace(/panjang/g, '.length')
        .replace(/ini/g, 'this')
        .replace(/pilih/g, 'switch')
        .replace(/kasus/g, 'case')
        .replace(/berhenti/g, 'break')
        .replace(/default/g, 'default')
        .replace(/coba/g, 'try')
        .replace(/tangkap/g, 'catch')
        .replace(/akhir/g, 'finally')
        .replace(/kelas/g, 'class')
        .replace(/baru/g, 'new')
        .replace(/lanjut/g, 'extends')
        .replace(/kuadrat/g, 'Math.pow')
        .replace(/akar/g, 'Math.sqrt')
        .replace(/gabung/g, '.concat')
        .replace(/panjangString/g, '.length')
        .replace(/ambilKarakter/g, '.charAt')
        .replace(/ubahKeHurufBesar/g, '.toUpperCase')
        .replace(/ubahKeHurufKecil/g, '.toLowerCase')
        .replace(/urut/g, '.sort')
        .replace(/maksimum/g, 'Math.max')
        .replace(/minimum/g, 'Math.min')
        .replace(/cari/g, '.indexOf')
        .replace(/splitString/g, '.split')
        .replace(/gabungString/g, '.join')
        .replace(/reverse/g, '.reverse')
        .replace(/hapus/g, '.splice')
        .replace(/ubah/g, '.map')
        .replace(/filter/g, '.filter')
        .replace(/isiUlang/g, '.fill')
        .replace(/cetak/g, 'console.table')
        .replace(/acak/g, 'Math.random')
        .replace(/buatObjek/g, 'Object.create')
        .replace(/tambahProperti/g, '.set')
        .replace(/hapusProperti/g, 'delete')
        .replace(/ambilProperti/g, '.get')
        .replace(/tanggalBaru/g, 'new Date')
        .replace(/formatTanggal/g, '.toISOString')
        .replace(/hariIni/g, 'new Date().toISOString().split("T")[0]')
        .replace(/tambahHari/g, 'function(date, days) { const result = new Date(date); result.setDate(result.getDate() + days); return result; }')
        .replace(/kurang/g, '-') 
        .replace(/kali/g, '*') 
        .replace(/bagi/g, '/') 
        .replace(/modulus/g, '%') 
        .replace(/samaDengan/g, '===') 
        .replace(/tidakSamaDengan/g, '!==') 
        .replace(/lebihBesar/g, '>') 
        .replace(/lebihKecil/g, '<') 
        .replace(/lebihBesarSama/g, '>=') 
        .replace(/lebihKecilSama/g, '<=') 
        .replace(/logikaDan/g, '&&') 
        .replace(/logikaAtau/g, '||') 
        .replace(/tidak/g, '!') 
        .replace(/fungsiBaru/g, 'function() {') 
        .replace(/akhirFungsi/g, '}') 
        .replace(/buatArray/g, 'Array.from') 
        .replace(/tambahArray/g, 'Array.prototype.concat') 
        .replace(/cariArray/g, 'Array.prototype.indexOf') 
        .replace(/hapusArray/g, 'Array.prototype.splice') 
        .replace(/ubahArray/g, 'Array.prototype.map') 
        .replace(/filterArray/g, 'Array.prototype.filter') 
        .replace(/isiArray/g, 'Array.prototype.fill') 
        .replace(/acakArray/g, 'Array.prototype.sort') 
        .replace(/gabungArray/g, 'Array.prototype.join') 
        .replace(/balikArray/g, 'Array.prototype.reverse') 
        .replace(/tambahString/g, '.concat') 
        .replace(/pecahString/g, '.split') 
        .replace(/cariString/g, '.indexOf') 
        .replace(/gantiString/g, '.replace') 
        .replace(/trimString/g, '.trim') 
        .replace(/substring/g, '.substring') 
        .replace(/substringAwal/g, '.slice') 
        .replace(/formatString/g, 'String.prototype') 
        .replace(/buatSet/g, 'new Set') 
        .replace(/tambahSet/g, '.add') 
        .replace(/hapusSet/g, '.delete') 
        .replace(/cariSet/g, '.has') 
        .replace(/buatMap/g, 'new Map') 
        .replace(/tambahMap/g, '.set') 
        .replace(/ambilMap/g, '.get') 
        .replace(/hapusMap/g, '.delete') 
        .replace(/cariMap/g, '.has') 
        .replace(/buatWeakSet/g, 'new WeakSet') 
        .replace(/tambahWeakSet/g, '.add') 
        .replace(/hapusWeakSet/g, '.delete') 
        .replace(/cariWeakSet/g, '.has') 
        .replace(/buatWeakMap/g, 'new WeakMap') 
        .replace(/tambahWeakMap/g, '.set') 
        .replace(/ambilWeakMap/g, '.get') 
        .replace(/hapusWeakMap/g, '.delete') 
        .replace(/cariWeakMap/g, '.has') 
        .replace(/buatPromise/g, 'new Promise') 
        .replace(/tunggu/g, 'await') 
        .replace(/jalankan/g, '.then') 
        .replace(/tangkapError/g, '.catch') 
        .replace(/akhirPromise/g, '.finally') 
        .replace(/buatAsync/g, 'async function') 
        .replace(/tungguAsync/g, 'await') 
        .replace(/jalankanAsync/g, '.then') 
        .replace(/tangkapErrorAsync/g, '.catch') 
        .replace(/akhirAsync/g, '.finally') 
        .replace(/buatInterval/g, 'setInterval') 
        .replace(/hapusInterval/g, 'clearInterval') 
        .replace(/buatTimeout/g, 'setTimeout') 
        .replace(/hapusTimeout/g, 'clearTimeout') 
        .replace(/buatEvent/g, 'new Event') 
        .replace(/tambahEvent/g, '.addEventListener') 
        .replace(/hapusEvent/g, '.removeEventListener') 
        .replace(/triggerEvent/g, '.dispatchEvent') 
        .replace(/buatXHR/g, 'new XMLHttpRequest') 
        .replace(/kirimXHR/g, '.send') 
        .replace(/ambilXHR/g, '.open') 
        .replace(/tangkapXHR/g, '.onreadystatechange') 
        .replace(/statusXHR/g, '.status') 
        .replace(/isiXHR/g, '.responseText') 
        .replace(/buatFetch/g, 'fetch') 
        .replace(/tangkapFetch/g, '.then') 
        .replace(/tangkapErrorFetch/g, '.catch') 
        .replace(/akhirFetch/g, '.finally');
}

module.exports = translateToJS;